version: 2.1
orbs:
    codecov: codecov/codecov@1.1.3
jobs:
    build_library:
        docker:
            - image: circleci/node:12.9.1-browsers
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v2-dependencies-react-{{ checksum "components/yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: |
                      cd components
                      yarn install --frozen-lockfile
            - save_cache:
                  name: Save Cache
                  paths:
                      - components/node_modules
                  key: v2-dependencies-react-{{ checksum "components/yarn.lock" }}
            - run:
                  name: Prettier Check
                  command: |
                      cd components
                      yarn prettier:check
            - run:
                  name: Lint
                  command: |
                      cd components
                      yarn lint
            - run:
                  name: Test
                  command: |
                      yarn test --coverage --watchAll=false
            - run:
                  name: Build Library
                  command: |
                      yarn build
            - run:
                  name: Test Artifacts
                  command: |
                      yarn test:artifacts
            - run:
                  name: NPM Package
                  command: |
                       cd dist && npm pack
            # Save the dist folder for use in future jobs.
            - persist_to_workspace:
                  root: .
                  paths:
                      - dist
                      - coverage
    coverage_report:
        working_directory: ~/react-component-library/components
        docker:
            - image: circleci/node:12.9.1-browsers
        steps:
            - checkout
            - attach_workspace:
                at: .
            - codecov/upload:
                file: './components/coverage/clover.xml'
                token: 5e6faafe-eaf0-4d71-a931-22f279d3e446

    # Builds the Storybook app using @pxblue/react-components persisted in /dist folder.
    build_storybook:
        docker:
            - image: circleci/node:12.9.1-browsers
        environment:
            - MASTER_BRANCH: master
            - DEV_BRANCH: dev
        steps:
            - checkout
            - attach_workspace:
                at: .
            - restore_cache:
                  keys:
                      - v2-dependencies-react-{{ checksum "demos/storybook/yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: |
                      cd demos/storybook
                      yarn install --frozen-lockfile

                      # Install the packed version of @pxblue/react-components
                      PACKAGED_VERSION=`node -p "require('../../dist/package.json').version"`
                      yarn add ../../dist/pxblue-react-components-$PACKAGED_VERSION.tgz
            - save_cache:
                  name: Save Cache
                  paths:
                      - demos/storybook/node_modules
                  key: v2-dependencies-react-{{ checksum "demos/storybook/yarn.lock" }}
            - run:
                  name: Prettier Check
                  command: |
                      cd demos/storybook
                      yarn prettier:check
            - run:
                  name: Lint
                  command: |
                      cd demos/storybook
                      yarn lint
            - run:
                  name: Build Storybook
                  command: |
                      cd demos/storybook

                      # master and dev branches should configure Google Analytics IDs before the build.
                      if [ $CIRCLE_BRANCH == $MASTER_BRANCH ]; then
                        STORYBOOK_GA_ID=$MASTER_GA
                      fi
                      if [ $CIRCLE_BRANCH == $DEV_BRANCH ]; then
                        STORYBOOK_GA_ID=$DEV_GA
                      fi

                      yarn build-storybook
                      cd storybook-static
                      touch .nojekyll
            - persist_to_workspace:
                  root: .
                  paths:
                      - demos/storybook/storybook-static

    # Builds the Showcase app using @pxblue/react-components persisted in /dist folder.
    build_showcase:
        docker:
            - image: circleci/node:12.9.1-browsers
        environment:
            - MASTER_BRANCH: master
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                  name: Initialize Submodule
                  command: |
                      git submodule init && git submodule update
            - restore_cache:
                  keys:
                      - v2-dependencies-react-{{ checksum "demos/showcase/yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: |
                      cd demos/showcase
                      yarn install --frozen-lockfile

                      # Install the packed version of @pxblue/react-components
                      PACKAGED_VERSION=`node -p "require('../../dist/package.json').version"`
                      yarn add ../../dist/pxblue-react-components-$PACKAGED_VERSION.tgz
            - save_cache:
                  name: Save Cache
                  paths:
                      - demos/showcase/node_modules
                  key: v2-dependencies-react-{{ checksum "demos/showcase/yarn.lock" }}
            # This will be prettier checked on the demo repository
            # - run:
            #       name: Prettier Check
            #       command: |
            #           cd demos/showcase
            #           yarn prettier:check
            - run:
                  name: Build Showcase
                  command: |
                      cd demos/showcase
                      yarn build

    deploy_storybook:
        docker:
            - image: circleci/node:12.9.1-browsers
        environment:
            - MASTER_BRANCH: master
            - DEV_BRANCH: dev
            - DEV_TARGET: https://github.com/pxblue-components/react-dev
            - MASTER_TARGET: https://github.com/pxblue-components/react
            - GH_EMAIL: pxblue@eaton.com
            - GH_NAME: PX Blue Agent
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run:
                  name: Deploy Storybook
                  command: |
                      git config --global user.email "$GH_EMAIL"
                      git config --global user.name "$GH_NAME"

                      cd demos/storybook

                      if [ $CIRCLE_BRANCH == $MASTER_BRANCH ]; then
                        git clone $MASTER_TARGET out
                      else
                        git clone $DEV_TARGET out
                      fi

                      cd out
                      git rm -rf .
                      # Add the CNAME record for pxblue.eaton.com
                      # if [ $CIRCLE_BRANCH == $MASTER_BRANCH ]; then
                      #   echo "pxblue-components.eaton.com/react" > CNAME
                      # fi
                      cd ..

                      cp -a storybook-static/. out/.
                      cd out

                      git add -A
                      git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty
                      git push
    publish:
      docker:
        - image: circleci/node:12.9.1-browsers
      steps:
        - checkout
        - attach_workspace:
            at: .
        - run:
            name: Authenticate with registry
            command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
        - run:
            name: Publish @pxblue/react-components
            command:  |
              cd dist
              MASTER_VERSION=`node -p "require('./package.json').version"`
              NPM_LATEST_VERSION=`npm show @pxblue/react-components version`
              if ! [ $MASTER_VERSION == $NPM_LATEST_VERSION ];
              then
                  npm publish
              else
                  echo "Latest version is already published."
              fi

workflows:
    version: 2
    react_library:
        jobs:
            - build_library
            - build_showcase:
                  requires:
                      - build_library
            - build_storybook:
                  requires:
                      - build_library
            - deploy_storybook:
                  requires:
                      - build_storybook
                  filters:
                      branches:
                          only:
                              - master
                              - dev
            - publish:
                  requires:
                      - build_storybook
                      - build_showcase
                  filters:
                       branches:
                          only:
                              - master
            - coverage_report:
                   requires:
                        - build_library
                #    filters:
                #         branches:
                #             only:
                #                 - master
